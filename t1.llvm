declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@.div_zero_str = private unnamed_addr constant [23 x i8] c"Error division by zero\00", align 1
define void @printi(i32) {
  %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
  call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
  ret void
}
define void @print(i8*) {
  %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
  call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
  ret void
}
define void @main() {
%reg_1 = add i32 50, 0
%reg_0 = alloca i32, i32 %reg_1
%reg_2 = getelementptr i32, i32* %reg_0, i32 0
store i32 0, i32* %reg_2
%reg_3 = getelementptr i32, i32* %reg_0, i32 1
store i32 0, i32* %reg_3
%reg_4 = getelementptr i32, i32* %reg_0, i32 2
store i32 0, i32* %reg_4
}
