@str = internal constant [16 x i8] c"hello\0A\00, world\0A\00"
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"

define void @printi(i32) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
    ret void
}

define void @print(i8*) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
    ret void
}


define i32 @main() {
entry:
%tmp1 = getelementptr [16 x i8], [16 x i8]* @str, i32 0, i32 0
%tmp2 = call i32 (i8*, ...) @printf( i8* %tmp1 )

%a = alloca [4 x i32]
%el = getelementptr [4 x i32],
[4 x i32]* %a, i32 0, i32 1
store i32 5, i32* %el
%rd = load i32, i32* %el
call void @printi(i32 %rd)
ret i32 42
}