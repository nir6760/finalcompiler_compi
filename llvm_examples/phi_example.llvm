@.intFormat = internal constant [4 x i8] c"%d\0A\00"
@.odd_str = internal constant [5 x i8] c"odd\0A\00"
@.even_str = internal constant [6 x i8] c"even\0A\00"

declare i32 @printf(i8*, ...)

define i32 @main() {
    %odd_str = getelementptr [5 x i8], [5 x i8]* @.odd_str, i32 0, i32 0
    %even_str = getelementptr [6 x i8], [6 x i8]* @.even_str, i32 0, i32 0
    
    ; TODO: change the value of num to see results
    %num = add i32 6, 0
    %parity = srem i32 %num, 2
    %is_even = icmp eq i32 %parity, 0
    br i1 %is_even, label %even_label, label %odd_label

    even_label:
        br label %print_result
    odd_label:
        br label %print_result
    print_result:
        %to_print = phi i8* [%even_str, %even_label], [%odd_str, %odd_label]
        call i32 (i8*, ...) @printf(i8* %to_print)
        ret i32 0
}


